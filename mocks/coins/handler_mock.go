// Code generated by MockGen. DO NOT EDIT.
// Source: coins.go

// Package coins_mock is a generated GoMock package.
package coins_mock

import (
	fiber "github.com/gofiber/fiber/v2"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCoinsHandler is a mock of CoinsHandler interface
type MockCoinsHandler struct {
	ctrl     *gomock.Controller
	recorder *MockCoinsHandlerMockRecorder
}

// MockCoinsHandlerMockRecorder is the mock recorder for MockCoinsHandler
type MockCoinsHandlerMockRecorder struct {
	mock *MockCoinsHandler
}

// NewMockCoinsHandler creates a new mock instance
func NewMockCoinsHandler(ctrl *gomock.Controller) *MockCoinsHandler {
	mock := &MockCoinsHandler{ctrl: ctrl}
	mock.recorder = &MockCoinsHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCoinsHandler) EXPECT() *MockCoinsHandlerMockRecorder {
	return m.recorder
}

// Test mocks base method
func (m *MockCoinsHandler) Test(c *fiber.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Test", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// Test indicates an expected call of Test
func (mr *MockCoinsHandlerMockRecorder) Test(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test", reflect.TypeOf((*MockCoinsHandler)(nil).Test), c)
}

// Payment mocks base method
func (m *MockCoinsHandler) Payment(ctx *fiber.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payment", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Payment indicates an expected call of Payment
func (mr *MockCoinsHandlerMockRecorder) Payment(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payment", reflect.TypeOf((*MockCoinsHandler)(nil).Payment), ctx)
}

// Receive mocks base method
func (m *MockCoinsHandler) Receive(ctx *fiber.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Receive", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Receive indicates an expected call of Receive
func (mr *MockCoinsHandlerMockRecorder) Receive(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Receive", reflect.TypeOf((*MockCoinsHandler)(nil).Receive), ctx)
}

// History mocks base method
func (m *MockCoinsHandler) History(ctx *fiber.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "History", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// History indicates an expected call of History
func (mr *MockCoinsHandlerMockRecorder) History(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "History", reflect.TypeOf((*MockCoinsHandler)(nil).History), ctx)
}

// Wallet mocks base method
func (m *MockCoinsHandler) Wallet(ctx *fiber.Ctx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Wallet", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wallet indicates an expected call of Wallet
func (mr *MockCoinsHandlerMockRecorder) Wallet(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wallet", reflect.TypeOf((*MockCoinsHandler)(nil).Wallet), ctx)
}
